chatwarsbot = 'user#id265204902'
admin = 'user#id85613593'
--redstatbot = 'user#id296332261'
redstatbot = 'user#0'
chatwarsbot_id = 265204902
admin_id = 85613593
--redstatbot_id = 296332261
redstatbot_id = 0
attack_target = ''
captcha_text = ''

flag = { red = 'üáÆüá≤', blue = 'üá™üá∫', yellow = 'üáªüá¶', white = 'üá®üáæ', black = 'üá¨üáµ' }

function on_msg_receive (msg)
	if msg.out then
		return
	end

	if (msg.from.peer_id == chatwarsbot_id) then
		sender = chatwarsbot
	elseif (msg.from.peer_id == admin_id) then
		sender = admin
	elseif (msg.from.peer_id == redstatbot_id) then
		sender = redstatbot
	else
		sender = 'guest'
	end

	if ((sender == redstatbot) and (msg.text ~= nil)) then
		if (string.find(msg.text, flag['blue'])) then
			attack_target = 'blue'
			os.execute("/home/`whoami`/tg/scripts/automate2 attack")
		elseif (string.find(msg.text, flag['yellow'])) then
			attack_target = 'yellow'
			os.execute("/home/`whoami`/tg/scripts/automate2 attack")
		elseif (string.find(msg.text, flag['white'])) then
			attack_target = 'white'
			os.execute("/home/`whoami`/tg/scripts/automate2 attack")
		elseif (string.find(msg.text, flag['black'])) then
			attack_target = 'black'
			os.execute("/home/`whoami`/tg/scripts/automate2 attack")
		end
	elseif ((sender == admin) and (msg.text ~= nil)) then
		if (string.find(msg.text, '/bot_status')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 status")
		elseif (valid_captcha_answer(msg.text) and (captcha_text ~= '')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 captcha_reply '" .. msg.text .. "_" .. captcha_text .. "'")
			captcha_text = ''
		end
	elseif ((sender ~= 'guest') and (msg.text ~= nil)) then
		if (string.find(msg.text, '/go')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 caravan_go")
		elseif (string.find(msg.text, '–•—Ä–∞–±—Ä—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫! –ì–¥–µ –±—É–¥–µ–º –¥–µ—Ä–∂–∞—Ç—å –æ–±–æ—Ä–æ–Ω—É?')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 defense_castle")
		elseif (string.find(msg.text, '–≤—ã–±–µ—Ä–∏ —Ç–æ—á–∫—É –∞—Ç–∞–∫–∏ –∏ —Ç–æ—á–∫—É –∑–∞—â–∏—Ç—ã')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 arena_a_d")
		elseif (string.find(msg.text, '–í—ã–±–µ—Ä–∏ –º–µ—Å—Ç–æ —É–¥–∞—Ä–∞')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 arena_a")
		elseif (string.find(msg.text, '–û—Å—Ç–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –∑–∞—â–∏—Ç–æ–π')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 arena_d")
		elseif (string.find(msg.text, '–ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 level_up")
		elseif (string.find(msg.text, '–∫–∞–∫—É—é —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É —Ç—ã —Ö–æ—á–µ—à—å —É–ª—É—á—à–∏—Ç—å')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 increase_stat")
		elseif (string.find(msg.text, '–¢–∞–±–ª–∏—Ü–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∞')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 arena_finished")
		elseif (string.find(msg.text, '–ü–æ–∫–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç—ã –º–æ–∂–µ—à—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–µ–¥–∏–Ω–∫–∞')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 arena_searching")
		elseif (string.find(msg.text, '–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –∏—Å–∫–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –ø–µ—â–µ—Ä—É')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 cave_active")
		elseif (string.find(msg.text, '–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –∏—Å–∫–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –ª–µ—Å')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 forest_active")
		elseif (string.find(msg.text, '–ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 search_cancelled")
		elseif (string.find(msg.text, '–°–æ—Å—Ç–æ—è–Ω–∏–µ') and string.find(msg.text, '–û—Ç–¥—ã—Ö')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 status_rest")
		elseif (string.find(msg.text, '–°–æ—Å—Ç–æ—è–Ω–∏–µ') and string.find(msg.text, '–ó–∞—â–∏—Ç–∞')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 status_defense")
		elseif (string.find(msg.text, '–°–º–µ–ª—ã–π –≤–æ—è–∫–∞! –í—ã–±–∏—Ä–∞–π –≤—Ä–∞–≥–∞') and (attack_target ~= '')) then
			os.execute("/home/`whoami`/tg/scripts/automate2 attack_" .. attack_target)
			attack_target = ''
		elseif (string.find(msg.text, '–ù–∞ –≤—ã—Ö–æ–¥–µ –∏–∑ –∑–∞–º–∫–∞ –æ—Ö—Ä–∞–Ω–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç: –≤ –æ–∫—Ä–µ—Å–Ω–æ—Å—Ç—è—Ö —ç–ø–∏–¥–µ–º–∏—è –º–∞–Ω–¥–∞—Ä–∏–Ω–æ–≤–æ–π –ª–∏—Ö–æ—Ä–∞–¥–∫–∏')) then
			captcha_text = captcha(msg.text)
			print("/home/`whoami`/tg/scripts/automate2 captcha '" .. captcha_text .. "'")
			os.execute("/home/`whoami`/tg/scripts/automate2 captcha '" .. captcha_text .. "'")
		end
	end
end

function captcha(msg)
	if msg:find('–º–µ–Ω—é') then
		local start_position = msg:find("–¢—ã-—Ç–æ –ø–æ–º–Ω–∏—à—å", 1, true)
		local substring = msg:sub(start_position + string.len('–¢—ã-—Ç–æ –ø–æ–º–Ω–∏—à—å, '))
		local end_position = substring:find(',', 1, true) - 1
		return substring:sub(1, end_position)
	elseif msg:find('–∂–∏–≤–æ—Ç–Ω–æ–µ') then
		local start_position = msg:find('–≥–æ–Ω—è—è—Å—å –∑–∞', 1, true)
		local substring = msg:sub(start_position + string.len('–≥–æ–Ω—è—è—Å—å –∑–∞ '))
		local end_position = substring:find('.', 1, true) - 1
		return substring:sub(1, end_position)
	end
end

function valid_captcha_answer(text)
	start_position = string.find(text, "/c%d")
	if (start_position == 1) then
		return true
	else
		return false
	end
end

function vardump(value, depth, key)
	local linePrefix = ""
	local spaces = ""

	if key ~= nil then
		linePrefix = "["..key.."] = "
	end

	if depth == nil then
		depth = 0
	else
		depth = depth + 1
		for i=1, depth do
			spaces = spaces .. "  "
		end
	end

	if type(value) == 'table' then
		mTable = getmetatable(value)
		if mTable == nil then
			print(spaces .. linePrefix .."(table) ")
		else
			print(spaces .. "(metatable) ")
			value = mTable
		end
		for tableKey, tableValue in pairs(value) do
			vardump(tableValue, depth, tableKey)
		end
	elseif type(value) == 'function' or type(value) == 'thread' or type(value) == 'userdata' or value == nil then
		print(spaces .. tostring(value))
	else
		print(spaces .. linePrefix .. "(" .. type(value) .. ") " .. tostring(value))
	end
end

function on_our_id (id) 
end
   
function on_secret_chat_created (peer)
end
   
function on_user_update (user)
end
   
function on_chat_update(user)
end
   
function on_get_difference_end ()
end
  
function on_binlog_replay_end ()
end
